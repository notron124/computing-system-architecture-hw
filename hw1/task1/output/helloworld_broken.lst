     1                                  bits 64
     2                                  default rel
     3                                  global _start
     4                                  
     5                                  section .data
     6 00000000 48656C6C6F20776F72-         message db "Hello world!", 10
     6 00000009 6C64210A           
     7                                      message_length  equ $ - message
     8 0000000D 0A4572726F72207772-         err_msg db 10, "Error writing to stdout", 10 ; Если не добавить перевод
     8 00000016 6974696E6720746F20-
     8 0000001F 7374646F75740A     
     9                                                                                   ; каретки в начале, эта строка сольется с частью "Hello world!" так при не нулевой
    10                                                                                   ; длине ее часть успее вывестись 
    11                                      err_msg_len equ $ - err_msg
    12                                  
    13                                  section .text
    14                                  _start:
    15                                      ; Запись в файл
    16 00000000 B801000000                  mov rax, 1
    17 00000005 BF01000000                  mov rdi, 1
    18 0000000A 48BE-                       mov rsi, message
    18 0000000C [0000000000000000] 
    19 00000014 BA01000000                  mov rdx, 1                ; Указываем неверную длину сообщения для возникновения ошибки
    20 00000019 0F05                        syscall
    21                                  
    22 0000001B 4883F80D                    cmp rax, message_length     ; Выставляет флаг нуля (ZF), если left_operand == right_operand
    23 0000001F 750C                        jnz handle_error            ; jump if not zero 
    24                                  
    25                                      ; Выход
    26 00000021 B83C000000                  mov rax, 60
    27 00000026 BF00000000                  mov rdi, 0                  ; Возвращаем 0 при успешном завершении
    28 0000002B 0F05                        syscall
    29                                  
    30                                  handle_error:
    31                                      ; Вывод в stderr
    32 0000002D B801000000                  mov rax, 1
    33 00000032 BF02000000                  mov rdi, 2
    34 00000037 48BE-                       mov rsi, err_msg
    34 00000039 [0D00000000000000] 
    35 00000041 BA19000000                  mov rdx, err_msg_len
    36 00000046 0F05                        syscall
    37                                  
    38 00000048 B83C000000                  mov rax, 60
    39 0000004D BF01000000                  mov rdi, 1
    40 00000052 0F05                        syscall
